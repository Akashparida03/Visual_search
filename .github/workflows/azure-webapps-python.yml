# This workflow will build and push a Python application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-python?tabs=bash&pivots=python-framework-flask
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the PYTHON_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Build and deploy FastAPI app to Azure Web App

env:
  AZURE_WEBAPP_NAME: visual-product-matcher    # ðŸ”¹ Change to your Azure Web App name
  PYTHON_VERSION: '3.10'                       # ðŸ”¹ Python runtime version
  REQUIREMENTS_PATH: 'backend/requirements.txt' # ðŸ”¹ Adjust if needed

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write       # âœ… Allows artifact upload/download

jobs:
  build:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: backend   # âœ… Run all commands from backend folder

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'

      - name: Ensure static directory exists
        run: mkdir -p static/images

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      # Optional: Run tests (uncomment if you have Pytest configured)
      # - name: Run tests
      #   run: pytest

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: fastapi-app
          path: |
            .
            !venv/

  deploy:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    defaults:
      run:
        working-directory: backend   # âœ… Consistent working directory

    steps:
      - name: Download artifact from build
        uses: actions/download-artifact@v4
        with:
          name: fastapi-app
          path: .

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: .
